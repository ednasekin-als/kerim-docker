version: '3.8'

services:
  mysql:
    build:
      context: .
      dockerfile: Dockerfile
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  backend:
    build: ./backend
    container_name: backend
    restart: always
    depends_on:
      - mysql
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WP_ENV: production
    volumes:
      - ./backend:/var/www/html:rw
    ports:
      - "${BACKEND_PORT}:80"
    networks:
      - app_network

  frontend:
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    build:
      context: ./nginx
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "${NGINX_PORT}:80"
      - "443:443"  # Открываем порт 443 для HTTPS
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app_network

volumes:
  mysql_data:
  wp_data:

networks:
  app_network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450